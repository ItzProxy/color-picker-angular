const e=window.mycomponent.h;class t{constructor(){this.colors=["red","green","blue"]}pickColor(e){this._value=e,this.change.emit(e)}onValueChange(e){this._value=e}componentDidLoad(){this._value=this.value}render(){const t=this.colors.map(t=>e("div",{class:this._value===t?"color-box selected":"color-box",style:{background:t},onClick:this.pickColor.bind(this,t)},t));return e("div",null,t)}static get is(){return"my-color-picker"}static get encapsulation(){return"shadow"}static get properties(){return{_value:{state:!0},value:{type:String,attr:"value",watchCallbacks:["onValueChange"]}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return".color-box{width:300px;border:1px solid #000;padding:25px;margin:25px;border-radius:50%}.color-box.selected{-webkit-box-shadow:10px 10px grey;box-shadow:10px 10px grey}"}}export{t as MyColorPicker};